// <auto-generated />
using ContactsServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactsServer.Migrations
{
    [DbContext(typeof(ContactsServerContext))]
    [Migration("20201022205524_ContactTableChanges")]
    partial class ContactTableChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactsServer.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactsServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Ronnie Andersson",
                            Hash = "zQPpWEC0z2ril1CmrPPj7uUd3BjlpaBA/pFQKkOhnCTiD/LPlXISHnHVjUR/RmZAsBNqNrUmBGUF/5X0ifQFPTTLGAZWas+guw/va09PORohIgO0Yt6aM7zuhicP6TnoiHA51N18wZxM41HKgl/wJlHKkKX16kS9jVvlMnkBk1Q+VWFS37la6xPdqArUDBeFj3A2pufOiTO7fagYnYpBhMyRGTM/FbreCwOrXPVtLHAhMMlfItzSdBO0Kqe1Ri6xPfvsSvxX0E9ooDMWHyjgJR5DOPtREfzTMqZBjlLlHPST7GjFfSfm0HYcrLs6psYEafL7rQYkEo8YKpBGn0IizA==",
                            Salt = "KiPSGT4b3gTS542WArx7cgepvAqTS4mtLJXyvniULdOy2qpkYmQKCzgoLdRad5axmxaihHdgKXH14pbQ5IHShA==",
                            UseRole = "Admin",
                            UserName = "roan"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
