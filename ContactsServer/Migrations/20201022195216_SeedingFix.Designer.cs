// <auto-generated />
using ContactsServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactsServer.Migrations
{
    [DbContext(typeof(ContactsServerContext))]
    [Migration("20201022195216_SeedingFix")]
    partial class SeedingFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactsServer.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactsServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Ronnie Andersson",
                            Hash = "qonlR9IP8VmtOUeXzaCqluC9qlGLY8/6MilE8ZS8/lyXZHpfN9crO/lgafRR0x2GWcVDL5sA1qmm5Xry5XFJNaoizqVz9m0Oze4cJg9FrqIB7Xi8Lp95O+hIfaa1dp+IOh5VPhAbJjvK32iAHSbUDy0Mscwq7Z92vog738INa4OLzR2VIgFsBAINoO98fT6swZfG0XolbaFUSel1XxhjxqaUAb7/uScF/RuAKQwSpxEtJz06guzz6qfeK0K2QS7Ohig9wnZ1eD/UKQGfAg5oU4Myp2r2t0jnNNQk9HqZSDWJ1kuTM6TIML8FzC6x3D6J+rIowkXJQ+uP6fGHgc0/3w==",
                            Salt = "nEgXnlZ8w0NZVLmqcTZ4kBE3P0Ec6Ub1Yn3k8/9gvXNvB19zOfYaOjfCUX0mSiXEIma/7pgMereY2KTXoMKbug==",
                            UseRole = "Admin",
                            UserName = "roan"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
